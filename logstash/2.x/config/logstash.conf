input {
	file {
		path => ["/opt/logstash/logfile/aegis.log"]
		type => "aegis"
		codec => "plain"
		start_position => "beginning"
		ignore_older => 0
		sincedb_path => "/opt/logstash/sincedb/.sincedb_aegis"
	}
}

filter {
    grok {
        match => {
            "message" => "%{GO_AEGIS_LOGS}"
        }
        remove_field => ["sss", "space", "message"]
    }
    if "_grokparsefailure" in [tags] {
        drop { }
    }
    json {
        source => "aegis_msg"
        remove_field => ["aegis_msg"]
    }
    date {
        match => ["timestamp", "MMdd HH:mm:ss.SSS"]
        target => "@timestamp"
    }
}

output {
    stdout {
        codec => rubydebug
    }
    elasticsearch {
        codec => "json"
        hosts => ["elasticsearch2x:9200"]
        index => "go_aegis_logs_index_%{+YYYY.MM.dd}"
        document_type => "%{type}"
        workers => 1
        flush_size => 1000
        idle_flush_time => 10
    }
}
