# rsyslog config file
# rsyslog 是一个 syslogd 的多线程增强版。
# rsyslog负责写入日志, logrotate负责备份和删除旧日志, 以及更新日志文件。



#### MODULES ####
# 配置加载的模块

## 新的配置方式
# 提供本地系统日志记录，比如使用logger模拟发送日志
# module(load="imuxsock")
# 提供内核级别的日志记录
# module(load="imklog")
# 提供标记message的能力
# module(load"immark")
# 提供UDP的514端口来接收UDP协议发送过来的数据
# module(load="imudp")
# input(type="imudp" port="514")
# 提供TCP的514端口来接收TCP协议发送过来的数据
# module(load="imtcp")
# input(type="imtcp" port="514")
# 装载imfile模块
module(load="imfile" PollingInterval="3")

## 旧的配置方式
# $ModLoad imuxsock.so
# $ModLoad imklog.so
# $ModLoad immark.so
# $ModLoad imfile

# $ModLoad imudp.so
# $UDPServerRun 514

# $ModLoad imtcp.so
# $InputTCPServerRun 514



#### GLOBAL DIRECTIVES ####
# 全局配置，配置ryslog守护进程的全局属性，比如主信息队列大小（MainMessageQueueSize）

global(processInternalMessages="off")
global(workDirectory="/usr/share/rsyslog")



#### TEMPLATES ####
# 定义日志格式模板，模板允许你指定日志信息的格式，也可用于生成动态文件名，或在规则中使用。
# 任何rsyslog生成的日志都可以根据需要使用模板进行格式化
# 格式：$template TEMPLATE_NAME,"text %PROPERTY% more text", [OPTION]
# 其中TEMPLATE_NAME是模板的名字,PROPERTY是rsyslog本身支持的一些属性参数。

## 新日志格式模板
template(name="BirdbenFormat" type="string" string="Birdben %TIMESTAMP% %msg%\n")
template(name="BirdbenFile" type="string" string="/usr/share/rsyslog/logfile/%HOSTNAME%/%$YEAR%-%$MONTH%/%$DAY%/%PROGRAMNAME%.log")

## 旧日志格式模板
# $template BirdbenFormat,"Birdben %TIMESTAMP% %msg%\n"
# $template BirdbenFile,"/usr/share/rsyslog/logfile/%HOSTNAME%/%$YEAR%-%$MONTH%/%$DAY%/%PROGRAMNAME%.log"



#### INPUT ####
## 新配置方式
input(type="imfile"
      File="/usr/share/rsyslog/logfile/command.log"
      Tag="birdben"
      # Ubuntu apt安装的是8.4.2的rsyslog，stateFile参数还是需要的
      stateFile="stat-birdben"
      Severity="info"
      PersistStateInterval="10")

## 旧配置方式
# 设置默认的timestamp格式
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
# 文件同步功能默认被禁止了，一般情况下不需要这种功能
# $ActionFileEnableSync on

# 定义工作目录。例如队列文件存储存储文件夹。
# $WorkDirectory /usr/share/rsyslog
# 检查日志文件间隔（秒）
# $InputFilePollInterval 3
# 回写偏移量数据到文件间隔时间（秒）
# $InputFilePersistStateInterval 10

# 读取日志文件
# $InputFileName /usr/share/rsyslog/logfile/command.log
# 日志写入日志附加标签字符串，不要添加特殊符号
# $InputFileTag birdben
# 定义记录偏移量数据文件名，不要添加特殊符号（新版本已经废弃，已经不需要设置，如果设置了workDirectory全局变量rsyslog会自动创建StateFile）
# $InputFileStateFile stat_birdben
# 日志等级
# $InputFileSeverity info
# 关闭重复消息控制
# $RepeatedMsgReduction off

# 激活读取，可以设置多组日志读取，每组结束时设置本参数。以示生效。（如果不设置该参数，rsyslog无法读取日志文件内容）
# $InputRunFileMonitor



#### RULES ####
# 规则（selectors选择器 + action动作）
# 每个规则行由两部分组成，selector部分和action部分，这两部分由一个或多个空格或tab分隔，selector部分指定源和日志等级，action部分指定对应的操作

# 规则的选择器（selectors）
# selector也由两部分组成，设施和优先级，由点号.分隔。第一部分为消息源或称为日志设施，第二部分为日志级别。多个选择器用;分隔，如：*.info;mail.none。

# 动作 （action）
# action是规则描述的一部分，位于选择器的后面，规则用于处理消息。总的来说，消息内容被写到一种日志文件上，但也可以执行其他动作，比如写到数据库表中或转发到其他主机。

# 关于Linux内核的所有日志都放到/dev/console(控制台)
# kern.*                                                /dev/console
# authpriv（授权和安全）验证相关的所有信息存放在/var/log/secure
# authpriv.*                                            /var/log/secure
# 邮件的所有信息存放在/var/log/maillog; 这里有一个-符号, 表示是使用异步的方式记录, 因为日志一般会比较大
# mail.*                                                -/var/log/maillog
# cron计划任务有关的信息存放在/var/log/cron
# cron.*                                                /var/log/cron
# 记录所有的大于等于emerg级别信息, 以wall方式发送给每个登录到系统的人
# *.emerg                                               *
# 记录所有日志类型的info级别以及大于info级别的信息到/var/log/messages，但是mail邮件信息，authpriv验证方面的信息和cron时间任务相关的信息除外
# *.info;mail.none;authpriv.none;cron.none              /var/log/messages
# 记录uucp,news.crit等存放在/var/log/spooler
# uucp,news.crit                                        /var/log/spooler
# 启动的相关信息
# local7.*                                              /var/log/boot.log
# 所有日志发送到远程rsyslog服务器，@表示UDP协议，@@表示TCP协议
# *.*                                                   @172.16.20.193:514
# 所有日志按照BirdbenFormat格式写入到/usr/share/rsyslog/logfile/output.log文件内
# *.*													/usr/share/rsyslog/logfile/output.log;BirdbenFormat
# 所有日志按照BirdbenFormat格式写入到BirdbenFile模板规则的文件内
*.*														-?BirdbenFile;BirdbenFormat



#### OUTPUTS ####
# 输出频道为用户可能想要的输出类型提供了保护，在规则中使用前要先定义。
# 格式：$outchannel NAME, FILE_NAME, MAX_SIZE, ACTION
# 其中NAME指定输出频道的名称，FILE_NAME指定输出文件，MAX_SIZE指定日志文件的大小，单位是bytes, ACTION指定日志文件到达MAX_SIZE时的操作。

# 输出到指定文件
# $outchannel log_rotation, /usr/share/rsyslog/logfile/output.log, 104857600, /home/joe/log_rotation_script
# *.* :omfile:$log_rotation

# ruleset和rule中的action即相当于output
